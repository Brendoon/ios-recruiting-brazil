//
//  MovieDetailsViewController.swift
//  Movs
//
//  Created by Brendoon Ryos on 31/01/19.
//  Copyright (c) 2019 Brendoon Ryos. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SDWebImage

protocol MovieDetailsDisplayLogic: class {
  func displayMovieDetails(viewModel: Movies.Details.ViewModel)
  func displayFavoriteMovie(viewModel: Movies.Details.ViewModel)
}

class MovieDetailsViewController: UIViewController {
  var interactor: MovieDetailsBusinessLogic?
  var router: (NSObjectProtocol & MovieDetailsRoutingLogic & MovieDetailsDataPassing)?
  
  var movieDetailsView = MovieDetailsView()
  var dismissHandler: (() -> ())?
  var initialTouchPoint: CGPoint = CGPoint(x: 0,y: 0)

  // MARK: Object lifecycle
  init() {
    super.init(nibName: nil, bundle: nil)
    self.title = "Movie"
    self.view.backgroundColor = ColorPalette.white
    self.modalPresentationStyle = .overFullScreen
    setup()
  }
  
  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup() {
    let viewController = self
    let interactor = MovieDetailsInteractor()
    let presenter = MovieDetailsPresenter()
    let router = MovieDetailsRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: View lifecycle
  override func viewDidLoad() {
    super.viewDidLoad()
    setupView()
  }
  
  override func viewWillAppear(_ animated: Bool) {
    super.viewWillAppear(animated)
    fetchMovieDetails()
    interactor?.isFavoriteMovie()
  }
  
  override func loadView() {
    self.view = movieDetailsView
  }
  
  func setupView() {
    let panGesture = UIPanGestureRecognizer(target: self, action: #selector(panGestureRecognizerHandler(_:)))
    self.view.addGestureRecognizer(panGesture)
    movieDetailsView.gridView.favoriteButton.addTarget(self, action: #selector(favoriteButtonPressed), for: .touchUpInside)
    movieDetailsView.closeButton.addTarget(self, action: #selector(closeButtonPressed), for: .touchUpInside)
  }
  
  @objc func favoriteButtonPressed(_ sender: UIButton) {
    interactor?.saveFavoriteMovie()
    sender.setBackgroundImage(UIImage(named: "favorite"), for: .normal)
    sender.isUserInteractionEnabled = false
  }
  
  @objc func closeButtonPressed() {
    self.dismissHandler?()
    self.dismiss(animated: true)
  }
  
  @objc func panGestureRecognizerHandler(_ sender: UIPanGestureRecognizer) {
    let touchPoint = sender.location(in: self.view?.window)
    
    if sender.state == UIGestureRecognizer.State.began {
      initialTouchPoint = touchPoint
    } else if sender.state == UIGestureRecognizer.State.changed {
      if touchPoint.y - initialTouchPoint.y > 0 {
        self.view.frame = CGRect(x: 0, y: touchPoint.y - initialTouchPoint.y, width: self.view.frame.size.width, height: self.view.frame.size.height)
      }
    } else if sender.state == UIGestureRecognizer.State.ended || sender.state == UIGestureRecognizer.State.cancelled {
      if touchPoint.y - initialTouchPoint.y > 50 {
        self.dismissHandler?()
        self.dismiss(animated: true, completion: nil)
      } else {
        UIView.animate(withDuration: 0.3, animations: {
          self.view.frame = CGRect(x: 0, y: 0, width: self.view.frame.size.width, height: self.view.frame.size.height)
        })
      }
    }
  }
  
  // MARK: Do something
  
  func fetchMovieDetails() {
    let request = Movies.Details.Request()
    interactor?.fetchMovieDetails(request: request)
  }
}


extension MovieDetailsViewController: MovieDetailsDisplayLogic {
  func displayMovieDetails(viewModel: Movies.Details.ViewModel) {
    movieDetailsView.setup(with: viewModel)
  }
  
  func displayFavoriteMovie(viewModel: Movies.Details.ViewModel) {
    let button = movieDetailsView.gridView.favoriteButton
    button.setBackgroundImage(UIImage(named: "favorite"), for: .normal)
    button.isUserInteractionEnabled = false
  }
}
